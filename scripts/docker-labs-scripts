#üìÇ Scripts Folder ‚Äî Docker Lab

This folder contains shell scripts (.sh) designed to guide you step-by-step through Docker and Docker Compose concepts, using practical examples from the Sportline project.

## üêö What is a .sh script?

.sh scripts are shell scripts, plain text files that contain commands executed by a shell interpreter (sh or bash)

They automate repetitive tasks like building images, running containers, or cleaning up resources

The first line usually includes a shebang (#!/bin/bash) that tells the system which shell to use

Scripts can be executed with:
```bash
chmod +x script.sh # make executable (first time)
./script.sh # run script
or
sh script.sh
```
Benefits:

Automation: run multiple commands with a single command

Consistency: ensures the same workflow every time

Learning tool: helps beginners see the sequence of Docker commands in action

##üìù Scripts in this folder
---
  
###1Ô∏è‚É£ docker-intro.sh ‚Äî Basic Docker Lab
---

Purpose: Introduces Docker, images, and containers in a simple, hands-on way

What it does:

Checks Docker installation (docker --version)

Pulls the hello-world image

Runs a container from hello-world

Lists downloaded images

Builds and runs your own container (hello-docker) from a local Dockerfile

Shows running containers and instructions to stop/remove them

Key concepts learned:

How Docker images and containers work

Running a container interactively and in detached mode

Exposing container ports to host machine
---

###2Ô∏è‚É£ docker-compose-guide.sh ‚Äî Docker Compose Lab
---
Purpose: Demonstrates how to orchestrate multiple services using Docker Compose, applied to the Sportline project

What it does:

Verifies Docker Compose installation (docker compose version)

Starts services defined in docker-compose.yml (app + db)

Shows running containers (docker compose ps)

Displays logs of the main service (app)

Enters the PostgreSQL container to list databases

Stops and removes all containers (docker compose down)

Key concepts learned:

Using Docker Compose to run multi-service applications

Checking container health and logs

Connecting to a database container for inspection

Cleaning up resources safely
---
##‚ö° Tips for using these scripts

Make scripts executable with chmod +x <script>.sh

Read each echo step carefully ‚Äî it guides the workflow

You can modify them to experiment with other images, ports, or services

Great way to visualize Docker commands in action before using them manually

Shell scripts like these are perfect for learning Docker because they show the commands in the correct order and explain what each step does. They are also reusable for new projects
